package com.example.mysqlconnection1;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class EditDataActivity extends Activity implements OnClickListener {

	EditText etNameEdit, etTelEdit, etMajorEdit;
	Button btnUpdateEdit, btnDeleteEdit;
	
	Integer st_id = 0;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_edit);
		etNameEdit = (EditText)findViewById(R.id.etNameEdit);
		etTelEdit = (EditText)findViewById(R.id.etTelEdit);
		etMajorEdit = (EditText)findViewById(R.id.etMajorEdit);
		
		Bundle extras = getIntent().getExtras();
		if(extras != null){
			if(extras.getString("st_id") != null){
				st_id = Integer.parseInt(extras.getString("st_id"));
				readData(st_id);
			}
			else{
				Toast.makeText(this, "Send Wrong Keyname", 100).show();
			}
		}	
		
		btnUpdateEdit = (Button)findViewById(R.id.btnUpdateEdit);
		btnDeleteEdit = (Button)findViewById(R.id.btnDeleteEdit);
		btnUpdateEdit.setOnClickListener(this);
		btnDeleteEdit.setOnClickListener(this);
	}
	
	private void readData(Integer st_id){
		ReadData task1 = new ReadData();
		task1.execute(new String[]{"http://10.0.2.2:8012/norton2/readjsonbyid.php?id=" + st_id});
	}
	
	private class ReadData extends AsyncTask<String, Void, Boolean>{

		ProgressDialog dialog = new ProgressDialog(EditDataActivity.this);
		@Override
		protected void onPreExecute() {
			dialog.setMessage("Reading Data...");
			dialog.show();
		}

		String text = "";
		
		ArrayList<String> list1;
		Student s1;
		@Override
		protected Boolean doInBackground(String... urls) {
			
			
			InputStream is1;				
			
			for(String url1 : urls){
				//Read from web to InputStream
				try {					
					HttpClient client = new DefaultHttpClient();
					HttpPost post = new HttpPost(url1);					
					HttpResponse response = client.execute(post);
					is1 = response.getEntity().getContent();
					
				} catch (ClientProtocolException e) {
					Toast.makeText(EditDataActivity.this, e.toString(), Toast.LENGTH_LONG).show();
					return false;
				} catch (IOException e) {
					Toast.makeText(EditDataActivity.this, e.toString(), Toast.LENGTH_LONG).show();
					return false;
				}
				//end of Read from web to InputStream
				
				//Convert from InputStream to String Text
				BufferedReader reader;				
				try {
					reader = new BufferedReader(new InputStreamReader(is1,"iso-8859-1"), 8);
					String line = null;
					while ((line = reader.readLine()) != null) {
						text += line + "\n";
					}
					is1.close();
				} catch (UnsupportedEncodingException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//end of Convert from InputStream to String Text
				
				//Convert from Text to JSON and add to ArrayList list1
				list1 = new ArrayList<String>();
				try {
					JSONArray jArray = new JSONArray(text);
					for(int i=0;i<jArray.length();i++){
						JSONObject jsonData = jArray.getJSONObject(i);						
						s1 = new Student();
						s1.setSt_name(jsonData.getString("st_name"));
						s1.setSt_tel(jsonData.getString("st_tel"));
						s1.setSt_major(jsonData.getString("st_major"));
					}
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//end of Convert from Text to JSON and add to ArrayList list1
			}
			
			return true;
		}
		
		@Override
		protected void onPostExecute(Boolean result) {
			if(result == true){			
				etNameEdit.setText(s1.getSt_name());
				etTelEdit.setText(s1.getSt_tel());
				etMajorEdit.setText(s1.getSt_major());
			}
			else{
				Toast.makeText(EditDataActivity.this, "Error", Toast.LENGTH_LONG).show();
			}
			dialog.dismiss();
		}
		
	}

	@Override
	public void onClick(View sender) {
		if(sender.getId() == R.id.btnUpdateEdit){
			UpdateData taskUpdate = new UpdateData();
			taskUpdate.execute(new String[]{""});
		}
		else if(sender.getId() == R.id.btnDeleteEdit){
			Builder msg = new AlertDialog.Builder(EditDataActivity.this);
			msg.setTitle("Delete Confirm");
			msg.setMessage("Are you sure to delete it?");
			msg.setPositiveButton("Delete", new DialogInterface.OnClickListener() {
				
				@Override
				public void onClick(DialogInterface dialog, int which) {
					DeleteData taskDelete = new DeleteData();
					taskDelete.execute(new String[]{""});
					
				}
			});
			msg.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
				
				@Override
				public void onClick(DialogInterface dialog, int which) {
					//No Code
					
				}
			});
			msg.show();

		}
		
	}
	
	private class UpdateData extends AsyncTask<String, Void, Boolean>{

		@Override
		protected Boolean doInBackground(String... params) {
			// TODO Auto-generated method stub
			return null;
		}
		
	}
	
	private class DeleteData extends AsyncTask<String, Void, Boolean>{

		@Override
		protected Boolean doInBackground(String... params) {
			// TODO Auto-generated method stub
			return null;
		}
		
	}

	
}
